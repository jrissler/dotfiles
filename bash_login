export PATH="/Users/zeke/src:/opt/local/bin:/opt/local/sbin:/usr/local/bin:/usr/local/sphinx/bin:/usr/local/sbin:/usr/local/mysql/bin:/opt/local/lib/postgresql83/bin:$PATH"

# export PS1="\w >"

# Prompt with current path and colored git branch (if there is one)
export PS1='\w\[\033[00;33m\]`git branch 2>/dev/null|cut -f2 -d\* -s` \[\033[00m\]>'

# Keep a long history
export HISTSIZE=100000
export HISTFILESIZE=409600

# Use textmate as default editor
export EDITOR="mate -w"

# Getting around
alias ..='cd ..'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../../'
alias la='ls -Alh'
alias fl='open -a ForkLift $1'
alias photo='open -a "Adobe Photoshop CS4" $1'
alias il='open -a "Adobe Illustrator" $1' # Not sure why this doesn't need the 'CS4' part
alias dotfiles='cd ~/Projects/personal/dotfiles'
alias cdp='cd ~/Projects'

# Auto-generate aliases to directories in these directories..
PROJECT_PARENT_DIRS[0]="$HOME/Projects"
PROJECT_PARENT_DIRS[1]="$HOME/Projects/friends"
PROJECT_PARENT_DIRS[2]="$HOME/Projects/gemini"
PROJECT_PARENT_DIRS[3]="$HOME/Projects/gemini/bacam"
PROJECT_PARENT_DIRS[4]="$HOME/Projects/gemini/fractured_atlas"
PROJECT_PARENT_DIRS[5]="$HOME/Projects/personal"
PROJECT_PARENT_DIRS[6]="$HOME/Projects/wordnik"
source ~/.project_aliases

# Stuff I have a hard time remembering
function cheat {
	echo "du -hd 1 # human readable sizes, one directory deep"
	echo "git checkout -b advocacy remotes/origin/advocacy # check out remove branch into a new local branch"
}

# These aliases assume that mysql was installed using the Hivelogic tutorial..
# http://hivelogic.com/articles/compiling-mysql-on-snow-leopard/
alias mysql_start='sudo launchctl load -w /Library/LaunchDaemons/com.mysql.mysqld.plist'
alias mysql_stop='sudo launchctl unload -w /Library/LaunchDaemons/com.mysql.mysqld.plist'

function mysqldump_all {
  for I in $(mysql -uroot -e 'show databases' -s --skip-column-names); do mysqldump -uroot $I | gzip > "$I.sql.gz"; done
}

# Find all non-hidden files in the current path
function ff() { find . -iname '*'$*'*' -type f ! -iname ".*" ! -iname "*.svn*" ; }

# Find all non-hidden directories in the current path
function fd() { find . -iname '*'$*'*' -type d ! -iname ".*" ! -iname "*.svn*"; }

# Find all files and directories in the current path
function fa() { find . -iname '*'$*'*' ; }

# http://elsethenif.wordpress.com/2009/06/11/open-a-new-tab-on-terminal-with-the-same-path-on-mac-os-x/
function tab {
	osascript -e "
		tell application \"System Events\" to tell process \"Terminal\" to keystroke \"t\" using command down
		tell application \"Terminal\" to do script \"cd $PWD \" in selected tab of the front window
	" > /dev/null 2>&1
}

# A substitute for cd that gives it history. (doesn't work right for directories containing spaces)
# function cd {
#   pushd . -n > /dev/null
#   pushd $1 > /dev/null
#   popd -n > /dev/null
# }
# Use this to go back through the 'cd' history
# alias b='popd > /dev/null'

# Toggle between two directories
alias swap="cd $OLDPWD"

# Recursively remove all .svn directories from the current directory
function rm_svn {
  find . -name .svn -print0 | xargs -0 rm -rf
}

# Ruby/Rails
alias mater='mate app config db doc lib public test spec features README* Rakefile Gemfile .gems'
alias materp='mate app config db doc lib public test spec vendor features README* Rakefile Gemfile .gems'
alias c='script/console'
alias s='script/server'
alias irb='irb'  
alias gemlist='gem list | egrep -v "^( |$)"'
alias rdoc="gem server & sleep 1; open 'http://localhost:8808'"
alias pdoc="open -a Firefox ./doc/plugins/"   
alias rdm="rake db:migrate"
alias rdr="rake db:rollback"
alias cov="open ./coverage/index.html"

# Misc aliases
alias mm='mate /Library/Application\ Support/Macromedia/mm.cfg'
alias start_postgres="sudo su postgres -c '/opt/local/lib/postgresql83/bin/pg_ctl -D /opt/local/var/db/postgresql83/defaultdb -l /opt/local/var/db/postgresql83/defaultdb/logfile start'"
alias stop_postgres="sudo su postgres -c '/opt/local/lib/postgresql83/bin/pg_ctl -D /opt/local/var/db/postgresql83/defaultdb -l /opt/local/var/db/postgresql83/defaultdb/logfile stop'"

# SSH
alias sshfaweb1='ssh deploy@faweb1.geminisbs.net'
alias sshfa='ssh deploy@fracturedatlas.org'
alias sshs='ssh serveradmin@sikelianos.com@sikelianos.com'
alias sshq='ssh zeke@queri.ac'
alias sshgs='ssh serveradmin@givezookssupport.com@givezookssupport.com'
alias sshl='ssh lang@staging.lang.elctech.com'
alias sshr_old='ssh root@67.19.146.186'
alias sshr='ssh root@174.133.236.18'
alias slice='ssh root@209.20.73.226'

# Dotfile
alias settings='mate ~/Projects/personal/dotfiles/bash_login'
alias refresh='source ~/.bash_login; echo ".bash_login sourced"'

# Git
# alias gb='git branch -a -v'
# alias gs='git status'
# alias gc='git commit -v'
# alias gca='git commit -v -a'
# alias gd='git diff -v'
# alias gco='git checkout'
alias gs='git status'
alias gc='git commit -v'
alias gca='git commit -v -a'
alias co='git checkout'
alias gitx='open -b nl.frim.GitX'

# Open current project's github page (from http://github.com/guides/jump-to-github-from-your-repository)
alias github="open \`git config -l | grep 'remote.origin.url' | sed -En 's/remote.origin.url=git(@|:\/\/)github.com(:|\/)(.+)\/(.+).git/https:\/\/github.com\/\3\/\4/p'\`"
alias commits="open \`git config -l | grep 'remote.origin.url' | sed -En 's/remote.origin.url=git(@|:\/\/)github.com(:|\/)(.+)\/(.+).git/https:\/\/github.com\/\3\/\4\/commits/p'\`"

function clone {
	if [ $1 ]; then
		rm -rf /tmp/tmpclone
		git clone $1 /tmp/tmpclone
		mate /tmp/tmpclone
	else
		echo "This function clones a git repo into /tmp and opens it in Texmate"
		echo "Usage: clone <git_repo_url>"
	fi
}

# An enhanced 'cd' - push directories
# onto a stack as you navigate to it.
#
# The current directory is at the top
# of the stack.
#
function stack_cd {
    if [ $1 ]; then
        # use the pushd bash command to push the directory
        # to the top of the stack, and enter that directory
        pushd "$1" > /dev/null
    else
        # the normal cd behavior is to enter $HOME if no
        # arguments are specified
        pushd $HOME > /dev/null
    fi
}
# the cd command is now an alias to the stack_cd function
#
alias cd=stack_cd

# Swap the top two directories on the stack
#
function swap {
    pushd > /dev/null
}
# s is an alias to the swap function
# alias s=swap

# Pop the top (current) directory off the stack
# and move to the next directory
#
function pop_stack {
    popd > /dev/null
}
alias p=pop_stack

# Display the stack of directories and prompt
# the user for an entry.
#
# If the user enters 'p', pop the stack.
# If the user enters a number, move that
# directory to the top of the stack
# If the user enters 'q', don't do anything.
#
function display_stack
{
    dirs -v
    echo -n "#: "
    read dir
    if [[ $dir = 'p' ]]; then
        pushd > /dev/null
    elif [[ $dir != 'q' ]]; then
        d=$(dirs -l +$dir);
        popd +$dir > /dev/null
        pushd "$d" > /dev/null
    fi
}
alias d=display_stack

if [[ -s /Users/zeke/.rvm/scripts/rvm ]] ; then source /Users/zeke/.rvm/scripts/rvm ; fi
	
	